---
title: Elbow, wrist, hand
subtitle: Musculoskeletal overview
---


::: {.callout title="Reading list"}

- Clinical Considerations of Elbow, Wrist, and Hand Pain @donnellyTravellSimonsSimons2019
- Kinesiology / biomech
    - Elbow and forearm @neumannKinesiologyMusculoskeletalSystem2017
    - wrist @neumannKinesiologyMusculoskeletalSystem2017
    - Hand @neumannKinesiologyMusculoskeletalSystem2017
- MMT
    - wrist flex MMT @weinstockNeuroKineticTherapyInnovative2010
    - wrist ext MMT @weinstockNeuroKineticTherapyInnovative2010
    - wrist abduction (Radial dev) MMT @weinstockNeuroKineticTherapyInnovative2010
    - Wrist adduction MMT @weinstockNeuroKineticTherapyInnovative2010
    - Hand MMT
        - MMT @weinstockNeuroKineticTherapyInnovative2010
- General
    - Ch17 elbow @duttonDuttonOrthopaedicExamination2020
    - Ch 18 @duttonDuttonOrthopaedicExamination2020
- Examination
    - Ch19 Screening the Shoulder and Upper Extremity @heickGoodmanSnyderDifferential2023
- Pathology
    - Elite Athlete's Hand and Wrist Injury, an Issue of Hand Clinics @carlsonEliteAthletesHand2012
    - Tendon disorders of the hand and wrist: IFSSH/FESSH instructional course book 2022 @federationoftheeuropeansocietiesforsurgeryofthehandTendonDisordersHand2022
- Manual tx
    - ch23 Orthopaedic Manual Physical Therapy of the Elbow and Forearm @wiseOrthopaedicManualPhysical2015
    - Ch24 Orthopaedic Manual Physical Therapy of the Wrist and Hand @wiseOrthopaedicManualPhysical2015
- Surgery
    - Management of Hand Fractures @chungGrabbSmithPlastic2020
    - Management of Wrist Fractures @chungGrabbSmithPlastic2020
    - Flexor Tendon Repair and Reconstruction @chungGrabbSmithPlastic2020
    - Extensor Tendon Repair and Reconstruction @chungGrabbSmithPlastic2020
    - Tenosynovitis Disorders of the Upper Extremity @chungGrabbSmithPlastic2020
    - Principles and Applications of Tendon Transfers @chungGrabbSmithPlastic2020
    - Ligament Injuries of the Hand @chungGrabbSmithPlastic2020
    - Ligament Injuries of the Wrist @chungGrabbSmithPlastic2020
    - Management of Mutilating Upper Extremity Injuries @chungGrabbSmithPlastic2020
    - Replantation Strategies of the Hand and Upper Extremity @chungGrabbSmithPlastic2020
    - Thumb Reconstruction @chungGrabbSmithPlastic2020
    - Dupuytren Disease @chungGrabbSmithPlastic2020
    - Hand Tumors @chungGrabbSmithPlastic2020
    - Treatment of Vascular Disorders of the Hand @chungGrabbSmithPlastic2020
    - Comprehensive Management of the Burned Hand @chungGrabbSmithPlastic2020 
    - Compartment Syndrome of the Upper Extremity  @chungGrabbSmithPlastic2020 
    - Common Congenital Hand Anomalies @chungGrabbSmithPlastic2020
    - Upper Limb Amputations and Prosthetics @chungGrabbSmithPlastic2020
    - Rheumatoid Arthritis and Inflammatory Arthropathies @chungGrabbSmithPlastic2020 
    - Osteoarthritis @chungGrabbSmithPlastic2020

:::


# Elbow Overview

3 bones:

1. Humerus
1. Radius
1. Ulna




# Humerus


### Medial epicondyle
<!-- PT, FCR, PL, Flexsuperf, FCU -->
```{python tbl-humerus-medial-epicondyle-oian}
#| label: tbl-humerus-medial-epicondyle-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Muscles originating from the Medial Epicondyle"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'origin_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['humerus_medial_epicondyle']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```



### Lateral epicondyle

```{python tbl-humerus-lateral-epicondyle-oian}
#| label: tbl-humerus-lateral-epicondyle-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Muscles originating from the Lateral Epicondyle"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'origin_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['humerus_lateral_epicondyle']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```

# Elbow Ligaments

- [Ulnar collateral ligament]({{< var ref-ulnar-collateral-ligament.path >}})
- [Radial collateral ligament]({{< var ref-radial-collateral-ligament.path >}})

# Radius bone

## Head of Radius



# Elbow Joint

## Articular surfaces


# Carrying Angle

# Elbow Flexion & Extension

## Elbow Flexion

Limits of flexion:


<!-- Should be: Biceps brachii, brachialis, brachioradialis -->
```{python tbl-elbow-flexors-oian}
#| label: tbl-elbow-flexors-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Elbow Flexor Muscles"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'action_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['elbow_flexion']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```

## Elbow Extension


Limits of extension:

```{python tbl-elbow-extensors-oian}
#| label: tbl-elbow-extensors-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Elbow Extensor Muscles"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'action_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['elbow_ext']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```

# Elbow Joint Stabilization

# Elbow ROM


# Pronation & Supination

## Complexity


## Pronation

```{python tbl-forearm-pronators-oian}
#| label: tbl-forearm-pronators-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Forearm Pronation Muscles"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'action_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['elbow_pronation']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```

## Supination

```{python tbl-forearm-supinators-oian}
#| label: tbl-forearm-supinators-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Forearm Supination Muscles"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'action_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['elbow_supination']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```

## Range of Motion

# Radio-ulnar complex

## Interosseous membrane

[Interosseous membrane (IO Membrane)]({{< var ref-interosseous-membrane-forearm.path >}})

## Ligaments

- Oblique cord
- Annular ligament
- Lateral Collateral Ligament (of the forearm) 
- Medial collateral ligament (of the forearm)
- Radio-ulnar joint ligaments
    - Anterior Radio-ulnar joint ligament
    - Posterior Radio-ulnar joint ligament
    - Inferior Radio-ulnar joint ligament

# Superior Radio-ulnar Joint

# Inferior Radio-ulnar Joint

## Movement

# MMT

See reading list

# Elbow evaluation

- Palpate:
    - Olecranon
    - Medial epicondyle
    - lateral epicondyle


# Wrist


# Wrist Movements

- Flexion & Extension
- Radial (abduction) & Ulnar Deviation (adduction)
- Circumduction

## Flexion


## Extension


## Radial Deviation

AKA *wrist abduction*

## Ulnar deviation

AKA *wrist adduction*

# Radiocarpal Joint {#radiocarpal-joint}

# Wrist Ligaments

- Palmar radiocarpal ligaments
    - [Radioscaphocapitate ligament]({{< var ref-radioscaphocapitate-ligament.path >}})
    - [Long radiolunate ligament]({{< var ref-long-radiolunate-ligament.path >}})
    - [Radioscapholunate ligament]({{< var ref-radioscapholunate-ligament.path >}})
    - [Short radiolunate ligament]({{< var ref-short-radiolunate-ligament.path >}})
- [Palmar ulnocarpal ligament]({{< var ref-palmar-ulnocarpal-ligament.path >}})
- [Dorsal Radiocarpal ligament]({{< var ref-dorsal-radiocarpal-ligament.path >}})
- Collateral Carpal ligaments
    - [Ulnar collateral carpal ligament]({{< var ref-ulnar-collateral-carpal-ligament.path >}})
    - [Radial collateral carpal ligament]({{< var ref-radial-collateral-carpal-ligament.path >}})
- Radiocarpal Ligaments
    - Anterior radiocarpal ligament
    - Posterior radiocarpal ligament
- Interosseous ligaments (link the scaphoid, lunate, and triquetrum)
    - [Scapholunate interosseous ligament (SLIL)]({{< var ref-scapholunate-interosseous-ligament.path >}})
    - [Lunotriquetral interosseous ligament (LTIL)]({{< var ref-lunotriquetral-interosseous-ligament.path >}})
    - Trapezotrapezoidal interosseous ligament
    - Trapezoidocapitate interosseous ligament
    - Hamatocapitate interosseous ligament
- Lunatocapitate ligament
- Triquetrocapitate ligament
- Scaphotrapezial ligament
- Triquetrohamate ligament
- Pisohamate ligament
- Pisometacarpal ligaments
    - 


## Radiocarpal and Midcarpal Joint ligaments

# Triangular Fibrocartilage Complex (TFcC)

The [Triangular Fibrocartilage Complex (TFcC)]({{< var ref-triangular-fibrocartilage-complex.path >}})

# Carpal Bones

- [Scaphoid]({{< var ref-scaphoid-bone.path >}})
- [Lunate]({{< var ref-lunate-bone.path >}})
- [Triquetrum]({{< var ref-triquetrum-bone.path >}})

# Midcarpal Joint
# Therex

## Elbow Exercises


- Elbow CARs

## Wrist Exercises

- ROM
    - Wrist CARs

## Compound Movements

- Deadhangs
- Scap retraction deadhangs
- Grip variations
    - Lumbrical grip on ankle weight
    - Pronated grip
    - Neutral
    - Supinated grip
    - Suicide grip (no thumb)
- Shoulder I's
- Shoulder T's 
- Shoulder Y's 

## Recovery Movements

- ULTT1


# Hand MMT

see reading list