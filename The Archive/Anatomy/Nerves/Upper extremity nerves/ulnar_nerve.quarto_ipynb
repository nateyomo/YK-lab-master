{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Ulnar Nerve\n",
        "---\n",
        "\n",
        "\n",
        "![Transverse section of distal forearm @grayAnatomyHumanBody1918](/The Archive/Images/Gray anatomy 1918 images/Myology/image421 Transverse section across distal ends of radius and ulna.gif)\n",
        "\n",
        "![Transverse cut of the Hand @grayAnatomyHumanBody1918](/The Archive/Images/Gray anatomy 1918 images/Myology/image422 Transverse section across the wrist and digits.gif)\n",
        "\n",
        "\n",
        "![Palmar aponeurosis @grayAnatomyHumanBody1918](/The Archive/Images/Gray anatomy 1918 images/Myology/image425 The palmar aponeurosis.gif)\n",
        "\n",
        "# Motor Innervation\n"
      ],
      "id": "276b925d"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-ulnar-nerve-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "#| tbl-cap: Ulnar Nerve Muscle Innervations\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'innervation_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['ulnar_nerve']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-ulnar-nerve-oian",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Entrapment\n",
        "\n",
        ":::{.callout-note}\n",
        "\n",
        "- Nyman E, Dahlin LB. The Unpredictable Ulnar Nerve-Ulnar Nerve Entrapment from Anatomical, Pathophysiological, and Biopsychosocial Aspects. Diagnostics (Basel). 2024;14(5):489. Published 2024 Feb 24. doi:10.3390/diagnostics14050489\n",
        ":::\n",
        "\n",
        "<h1 id=\"palsy\">Palsy</h1>\n",
        "\n",
        "\n",
        "# Examination\n",
        "\n",
        "- [ULTT3]({{< var ref-ultt.ultt3.path >}})\n",
        "- Froment's Sign\n",
        "- Ulnar Claw hand\n",
        "\n",
        "# Ulnar paradox sign\n",
        "\n",
        "\n",
        "\n",
        "# Ulnar Claw hand\n",
        "\n",
        "Claw hand refers to a passive hand position that is commmonly observed following an ulnar nerve lesion.\n",
        "\n",
        "# Entrapment {#entrapment}\n",
        "\n",
        "::: {.callout title=\"Reading list\"}\n",
        "\n",
        "- Ulnar nerve p373 @DynamicNeurologicalStabilizationClinicalRehabilitation2014\n",
        "\n",
        ":::\n",
        "\n",
        "- Pancoast tumor\n",
        "\n",
        "# Treatment\n",
        "\n",
        "- [Brachial plexus axillary release]({{< var ref-brachial-plexus.release >}})\n",
        "- [ULTT3]({{< var ref-ultt3.path >}})"
      ],
      "id": "9f2f8334"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}