{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: Latissimus Dorsi\n",
        "---\n",
        "\n",
        "\n",
        "![Left Humerus (Anterior view) @grayAnatomyHumanBody1918](/The Archive/Images/Gray anatomy 1918 images/Osteology/image207 gray1918 Left humerus. Anterior view.gif){#fig-gray1918-image207}\n",
        "\n",
        "![Muscles of the Abdomen @OpenStaxAnatomyPhysiology2022](/The Archive/Images/OpenStax Anatomy and Physiology 2e/fig11.16 Muscles of the Abdomen.jpeg){#fig-openstax-fig11.16}\n",
        "\n",
        "![Muscles that move the humerus @OpenStaxAnatomyPhysiology2022](/The Archive/Images/OpenStax Anatomy and Physiology 2e/fig11.23 Muscles That Move the Humerus.jpeg){#fig-openstax-fig11.23}\n",
        "\n",
        "::: {.callout title=\"Reading list\"}\n",
        "\n",
        "- Straight arm MMT @weinstockNeuroKineticTherapyInnovative2010\n",
        "- Bent arm MMT @weinstockNeuroKineticTherapyInnovative2010\n",
        "\n",
        ":::\n"
      ],
      "id": "ecdbcb23"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'muscle_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['latissimus_dorsi']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-oian",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Origin {#origin}\n",
        "\n",
        "- **Vertebral part**: Spinous processes of T7–T12 vertebrae; thoracolumbar fascia @gilroyAtlasAnatomy2020\n",
        "- **Scapular part**: Scapula (inferior angle) @gilroyAtlasAnatomy2020\n",
        "- **Costal part**: 9th to 12th ribs @gilroyAtlasAnatomy2020\n",
        "- **Iliac part**: Iliac crest (posterior one third) @gilroyAtlasAnatomy2020\n",
        "\n",
        "# Insertion {#insertion}\n",
        "\n",
        "Floor of intertubercular groove of humerus @gilroyAtlasAnatomy2020\n",
        "\n",
        "# Innervation {#innervation}\n",
        "[Thoracodorsal n.]({{< var ref-thoracodorsal-nerve.path >}}) ([C6]({{< var ref-nerve-root.c6 >}}), [C7]({{< var ref-nerve-root.c7 >}}), [C8]({{< var ref-nerve-root.c8 >}})) @gilroyAtlasAnatomy2020\n",
        "\n",
        "\n",
        "\n",
        "# Action {#action}\n",
        "\n",
        "- **GHJ**: Internal rotation, adduction, extension @gilroyAtlasAnatomy2020\n",
        "- **Respiration**: “cough muscle” @gilroyAtlasAnatomy2020\n",
        "\n",
        "- Biomechanics\n",
        "    - Isolated Latissimus dorsi contraction results in inferior displacement of the humeral head @jonesProjectFoundations2025\n",
        "\n",
        "::: {.callout-note title=\"Adductor force couple\"}\n",
        "\n",
        "The *triceps brachii long head* and [latissimus dorsi]({{< var ref-latissimus-dorsi.action >}}) form a \"force adductor couple\" @jonesProjectFoundations2025.\n",
        "The adduction and extension moment created by the [latissimus dorsi]({{< var ref-latissimus-dorsi.action >}}) results in inferior displacement of the humeral head, the *triceps long head* contracts and its abductive component counteracts the [latissimus dorsi]({{< var ref-latissimus-dorsi.action >}}) creating a superior glide @jonesProjectFoundations2025.\n",
        "This results in no net vertical translation of the humeral head and keeping its optimal position in the glenoid.\n",
        "\n",
        "Thus although the triceps long head has an \"abductive\" component, we consider it to function as an \"adductive assist.\"\n",
        ":::\n",
        "\n",
        "# Function\n",
        "\n",
        "This muscle  adducts and internally rotates the arm and depresses the raised arm @brazisLocalizationClinicalNeurology2022\n",
        "\n",
        ":::{.callout-note title=\"Mini lat muscle\"}\n",
        "The teres major can almost be considered a \"mini lat\" since it has the same functions\n",
        ":::"
      ],
      "id": "3e977211"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}