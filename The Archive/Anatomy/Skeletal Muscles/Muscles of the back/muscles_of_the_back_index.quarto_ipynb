{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Suboccipitals\n"
      ],
      "id": "34de85b2"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-suboccipital-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "#| tbl-cap: Suboccipital Muscles\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.core.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'group_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['suboccipital_muscle_group']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-suboccipital-oian",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Prevertebral Muscles\n",
        "\n",
        "- [Longus capitis]({{< var ref-longus-capitis.path >}})\n",
        "- [Longus Colli Cervicis]({{< var ref-longus-colli-cervicis.path >}})\n",
        "- [Rectus Capitis anterior]({{< var ref-rectus-capitis-anterior.path >}})\n",
        "- [Rectus Capitis Lateralis]({{< var ref-rectus-capitis-lateralis.path >}})\n"
      ],
      "id": "aace34ac"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-prevertebral-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "#| tbl-cap: Prevertebral Muscles\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.core.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'group_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['prevertebral_muscle_group']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-prevertebral-oian",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Superficial intrinsic back Muscles\n",
        "\n",
        "- [Serratus posterior superior]({{< var ref-serratus-posterior-superior.path >}})\n",
        "- [Serratus posterior inferior]({{< var ref-serratus-posterior-inferior.path >}})\n",
        "- [Splenius capitis]({{< var ref-splenius-capitis.path >}})\n",
        "- [Splenius cervicis]({{< var ref-splenius-cervicis.path >}})\n"
      ],
      "id": "9758f842"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-superficial-intrinsic-back-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "#| tbl-cap: Superficial Intrinsic Back Muscles\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.core.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'group_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['intrinsic_back_muscles_superficial']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-superficial-intrinsic-back-oian",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Intermediate intrinsic back muscles (Erector Spinae)\n",
        "\n",
        "::: {.columns}\n",
        "::: {.column}\n",
        "Iliocostalis\n",
        "\n",
        "- [Iliocostalis Cervicis]({{< var ref-iliocostalis-cervicis.path >}})\n",
        "- [Iliocostalis Thoracis]({{< var ref-iliocostalis-thoracis.path >}})\n",
        "- [Iliocostalis lumborum]({{< var ref-iliocostalis-lumborum.path >}})\n",
        "\n",
        ":::\n",
        "::: {.column}\n",
        "\n",
        "[**Longissimus**]({{< var ref-longissimus-muscles.path >}})\n",
        "\n",
        "- [Longissimus Capitis]({{< var ref-longissimus-capitis.path >}})\n",
        "- [Longissimus Cervicis]({{< var ref-longissimus-cervicis.path >}})\n",
        "- [Longissimus Thoracis]({{< var ref-longissimus-thoracis.path >}})\n",
        "\n",
        ":::\n",
        "::: {.column}\n",
        "\n",
        "**Spinalis**\n",
        "\n",
        "- [Spinalis Cervicis]({{< var ref-spinalis-cervicis.path >}})\n",
        "- [Spinalis Thoracis]({{< var ref-spinalis-thoracis.path >}})\n",
        "\n",
        ":::\n",
        ":::\n"
      ],
      "id": "e5ee6536"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-erector-spinae-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "#| tbl-cap: Intermediate intrinsic back muscles\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.core.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'group_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['erector_spinae_muscles']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-erector-spinae-oian",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Transversospinalis Muscles \n",
        "\n",
        "- [Rotatores Breves]({{< var ref-rotatores-breves.path >}})\n",
        "- [Rotatores Longi]({{< var ref-rotatores-longi.path >}})\n",
        "- [Multifidi]({{< var ref-multifidi.path >}})\n",
        "- [Semispinalis Capitis]({{< var ref-semispinalis-capitis.path >}})\n",
        "- [Semispinalis Cervicis]({{< var ref-semispinalis-cervicis.path >}})\n",
        "- [Semispinalis Thoracis]({{< var ref-semispinalis-thoracis.path >}})\n"
      ],
      "id": "58802952"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-transversospinalis-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "#| tbl-cap: Transversospinalis muscles\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.core.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'group_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['transversospinalis_muscles']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-transversospinalis-oian",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Deep Segmental Back Muscles \n",
        "\n",
        "- [Interspinales Cervicis]({{< var ref-interspinales-cervicis.path >}})\n",
        "- [Interspinales Lumbora]({{< var ref-interspinales-lumbora.path >}})\n"
      ],
      "id": "f50eff70"
    },
    {
      "cell_type": "code",
      "metadata": {
        "message": false
      },
      "source": [
        "#| label: tbl-deep-segmental-back-oian\n",
        "#| warning: false\n",
        "#| echo: false\n",
        "#| tbl-cap: Transversospinalis muscles\n",
        "\n",
        "from pathlib import Path\n",
        "import pandas as pd\n",
        "from pyprojroot import here\n",
        "from IPython.core.display import display, HTML\n",
        "\n",
        "# Set the path for the script file\n",
        "script_file_path = here(\"scripts/process_oian_table.py\")\n",
        "\n",
        "# Check if the script file exists\n",
        "if script_file_path.exists():\n",
        "    import sys\n",
        "    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path\n",
        "\n",
        "    from process_oian_table import process_oian_table  # Import the specific function\n",
        "\n",
        "    # Define the column to filter by and the identifiers to include\n",
        "    filter_column = 'functional_group_identifier'  # Choose the column you want to filter by\n",
        "    filter_identifiers = ['deep_segmental_back_muscles']  # Replace with actual identifiers you want to include\n",
        "\n",
        "    # Call the function to get the HTML table with filtering\n",
        "    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)\n",
        "\n",
        "    if html_table:\n",
        "        # Render the HTML table for display\n",
        "        display(HTML(html_table))  # Use display to render the HTML properly\n",
        "else:\n",
        "    print(\"Script file does not exist. Please check the path.\")"
      ],
      "id": "tbl-deep-segmental-back-oian",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/nathanielyomogida/miniconda3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}