---
title: Hip Adductor Muscles
---



:::{layout-ncol="2"}

### Primary



- [Pectineus]({{< var ref-pectineus.path >}}) @neumannKinesiologyMusculoskeletalSystem2017
- [Adductor Longus]({{< var ref-adductor-longus.path >}}) @neumannKinesiologyMusculoskeletalSystem2017
- [Gracilis]({{< var ref-gracilis.path >}}) @neumannKinesiologyMusculoskeletalSystem2017
- [Adductor Brevis]({{< var ref-adductor-brevis.path >}}) @neumannKinesiologyMusculoskeletalSystem2017
- [Adductor Magnus]({{< var ref-adductor-magnus.path >}}) @neumannKinesiologyMusculoskeletalSystem2017

### Secondary

- [Biceps Femoris Long Head]({{< var ref-biceps-femoris-long-head.path >}}) @neumannKinesiologyMusculoskeletalSystem2017
- [Gluteus Maximus]({{< var ref-gluteus-maximus.path >}}) (inferior/ posterior fibers) @neumannKinesiologyMusculoskeletalSystem2017
- [Quadratus Femoris]({{< var ref-quadratus-femoris.path >}}) @neumannKinesiologyMusculoskeletalSystem2017
- [Obturator Externus]({{< var ref-obturator-externus.path >}}) @neumannKinesiologyMusculoskeletalSystem2017

:::

# Primary

```{python tbl-primary-hip-adductor-oian}
#| label: tbl-primary-hip-adductor-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Primary hip adductors"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'functional_group_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['primary_hip_adductor']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```

# Secondary

```{python tbl-secondary-hip-adductor-oian}
#| label: tbl-secondary-hip-adductor-oian
#| warning: false
#| message: false
#| echo: false
#| tbl-cap: "Secondary hip adductors"

from pathlib import Path
import pandas as pd
from pyprojroot import here
from IPython.core.display import display, HTML

# Set the path for the script file
script_file_path = here("scripts/process_oian_table.py")

# Check if the script file exists
if script_file_path.exists():
    import sys
    sys.path.append(str(script_file_path.parent))  # Add the directory of the script to the system path

    from process_oian_table import process_oian_table  # Import the specific function

    # Define the column to filter by and the identifiers to include
    filter_column = 'functional_group_identifier'  # Choose the column you want to filter by
    filter_identifiers = ['secondary_hip_adductor']  # Replace with actual identifiers you want to include

    # Call the function to get the HTML table with filtering
    html_table = process_oian_table(filter_column=filter_column, filter_identifiers=filter_identifiers)

    if html_table:
        # Render the HTML table for display
        display(HTML(html_table))  # Use display to render the HTML properly
else:
    print("Script file does not exist. Please check the path.")

```
