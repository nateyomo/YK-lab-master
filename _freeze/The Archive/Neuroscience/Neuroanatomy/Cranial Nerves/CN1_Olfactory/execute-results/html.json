{
  "hash": "4c7d1758ee5d8ebb78026f7672dfcaeb",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"CN I: Olfactory nerve\"\n---\n\n\n<!-- \nto read\n- Chapter 12 Brainstem I: Surface Anatomy and Cranial Nerves @blumenfeldNeuroanatomyClinicalCases2022 \n\n-->\n\n- Type: Sensory\n- Function: Sense of smell\n- Dysfunction: Anosmia (loss of smell)\n\n\n```{mermaid}\nflowchart TD\n  A[Nose] -- smell --> B[\"Cribriform plate\"]\n  B --> C[\"Olfactory Sulci\"]\n  C -- Skips Thalamus --> D[\"Olfactory Tract\"]\n  D --> E[Olfactory Bulb]\n  \n  E --> F[Insula gustation but i wrote that this was wrong]\n  E --> G[Piriform Cortex]\n  E --> H[Amygdala]\n  E --> I[Entorhinal Cortex]\n\n  F --> J{Gustation}\n  G --> K{Olfaction processing}\n  H --> L{Emotion of Fear}\n  I --> M{Formation of Memory}\n\n```\n\n::: {#b92cb34c .cell execution_count=1}\n``` {.python .cell-code}\nfrom graphviz import Digraph\n\n# Create a Digraph object\ndot = Digraph(\"Olfactory Pathway\", format=\"png\")\n\n# Define nodes and their labels\nnodes = {\n    \"A\": \"Nose\",\n    \"B\": \"Cribriform Plate\",\n    \"C\": \"Olfactory Sulci\",\n    \"D\": \"Olfactory Tract\",\n    \"E\": \"Olfactory Bulb\",\n    \"F\": \"Insula (gustation but i wrote that this was wrong)\",\n    \"G\": \"Piriform Cortex\",\n    \"H\": \"Amygdala\",\n    \"I\": \"Entorhinal Cortex\",\n    \"J\": \"Gustation\",\n    \"K\": \"Olfaction Processing\",\n    \"L\": \"Emotion of Fear\",\n    \"M\": \"Formation of Memory\"\n}\n\n# Add nodes to the graph\nfor node, label in nodes.items():\n    dot.node(node, label)\n\n# Define edges and optional labels\nedges = [\n    (\"A\", \"B\", \"smell\"),\n    (\"B\", \"C\", None),\n    (\"C\", \"D\", \"Skips Thalamus\"),\n    (\"D\", \"E\", None),\n    (\"E\", \"F\", None),\n    (\"E\", \"G\", None),\n    (\"E\", \"H\", None),\n    (\"E\", \"I\", None),\n    (\"F\", \"J\", None),\n    (\"G\", \"K\", None),\n    (\"H\", \"L\", None),\n    (\"I\", \"M\", None)\n]\n\n# Add edges to the graph\nfor start, end, label in edges:\n    dot.edge(start, end, label if label else \"\")\n\n# Render and save the graph\ndot.render(\"olfactory_pathway\", view=True)\n\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg\">FileNotFoundError</span>                         Traceback (most recent call last)\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/site-packages/graphviz/backend/execute.py:78</span>, in <span class=\"ansi-cyan-fg\">run_check</span><span class=\"ansi-blue-fg\">(cmd, input_lines, encoding, quiet, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">     77</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span>:\n<span class=\"ansi-green-fg\">---&gt; 78</span>         proc <span style=\"color:rgb(98,98,98)\">=</span> subprocess<span style=\"color:rgb(98,98,98)\">.</span>run(cmd, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n<span class=\"ansi-green-fg ansi-bold\">     79</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">except</span> <span style=\"font-weight:bold;color:rgb(215,95,95)\">OSError</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> e:\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/subprocess.py:548</span>, in <span class=\"ansi-cyan-fg\">run</span><span class=\"ansi-blue-fg\">(input, capture_output, timeout, check, *popenargs, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    546</span>     kwargs[<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">stderr</span><span style=\"color:rgb(175,0,0)\">'</span>] <span style=\"color:rgb(98,98,98)\">=</span> PIPE\n<span class=\"ansi-green-fg\">--&gt; 548</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">with</span> Popen(<span style=\"color:rgb(98,98,98)\">*</span>popenargs, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs) <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> process:\n<span class=\"ansi-green-fg ansi-bold\">    549</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">try</span>:\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/subprocess.py:1026</span>, in <span class=\"ansi-cyan-fg\">Popen.__init__</span><span class=\"ansi-blue-fg\">(self, args, bufsize, executable, stdin, stdout, stderr, preexec_fn, close_fds, shell, cwd, env, universal_newlines, startupinfo, creationflags, restore_signals, start_new_session, pass_fds, user, group, extra_groups, encoding, errors, text, umask, pipesize, process_group)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1023</span>             <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stderr <span style=\"color:rgb(98,98,98)\">=</span> io<span style=\"color:rgb(98,98,98)\">.</span>TextIOWrapper(<span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>stderr,\n<span class=\"ansi-green-fg ansi-bold\">   1024</span>                     encoding<span style=\"color:rgb(98,98,98)\">=</span>encoding, errors<span style=\"color:rgb(98,98,98)\">=</span>errors)\n<span class=\"ansi-green-fg\">-&gt; 1026</span>     <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_execute_child(args, executable, preexec_fn, close_fds,\n<span class=\"ansi-green-fg ansi-bold\">   1027</span>                         pass_fds, cwd, env,\n<span class=\"ansi-green-fg ansi-bold\">   1028</span>                         startupinfo, creationflags, shell,\n<span class=\"ansi-green-fg ansi-bold\">   1029</span>                         p2cread, p2cwrite,\n<span class=\"ansi-green-fg ansi-bold\">   1030</span>                         c2pread, c2pwrite,\n<span class=\"ansi-green-fg ansi-bold\">   1031</span>                         errread, errwrite,\n<span class=\"ansi-green-fg ansi-bold\">   1032</span>                         restore_signals,\n<span class=\"ansi-green-fg ansi-bold\">   1033</span>                         gid, gids, uid, umask,\n<span class=\"ansi-green-fg ansi-bold\">   1034</span>                         start_new_session, process_group)\n<span class=\"ansi-green-fg ansi-bold\">   1035</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">except</span>:\n<span class=\"ansi-green-fg ansi-bold\">   1036</span>     <span style=\"font-style:italic;color:rgb(95,135,135)\"># Cleanup if the child failed starting.</span>\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/subprocess.py:1950</span>, in <span class=\"ansi-cyan-fg\">Popen._execute_child</span><span class=\"ansi-blue-fg\">(self, args, executable, preexec_fn, close_fds, pass_fds, cwd, env, startupinfo, creationflags, shell, p2cread, p2cwrite, c2pread, c2pwrite, errread, errwrite, restore_signals, gid, gids, uid, umask, start_new_session, process_group)</span>\n<span class=\"ansi-green-fg ansi-bold\">   1949</span>         err_msg <span style=\"color:rgb(98,98,98)\">=</span> os<span style=\"color:rgb(98,98,98)\">.</span>strerror(errno_num)\n<span class=\"ansi-green-fg\">-&gt; 1950</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> child_exception_type(errno_num, err_msg, err_filename)\n<span class=\"ansi-green-fg ansi-bold\">   1951</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> child_exception_type(err_msg)\n\n<span class=\"ansi-red-fg\">FileNotFoundError</span>: [Errno 2] No such file or directory: PosixPath('dot')\n\nThe above exception was the direct cause of the following exception:\n\n<span class=\"ansi-red-fg\">ExecutableNotFound</span>                        Traceback (most recent call last)\nCell <span class=\"ansi-green-fg\">In[1], line 48</span>\n<span class=\"ansi-green-fg ansi-bold\">     45</span>     dot<span style=\"color:rgb(98,98,98)\">.</span>edge(start, end, label <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> label <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span> <span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">\"</span>)\n<span class=\"ansi-green-fg ansi-bold\">     47</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># Render and save the graph</span>\n<span class=\"ansi-green-fg\">---&gt; 48</span> dot<span style=\"color:rgb(98,98,98)\">.</span>render(<span style=\"color:rgb(175,0,0)\">\"</span><span style=\"color:rgb(175,0,0)\">olfactory_pathway</span><span style=\"color:rgb(175,0,0)\">\"</span>, view<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/site-packages/graphviz/_tools.py:171</span>, in <span class=\"ansi-cyan-fg\">deprecate_positional_args.&lt;locals&gt;.decorator.&lt;locals&gt;.wrapper</span><span class=\"ansi-blue-fg\">(*args, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    162</span>     wanted <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">, </span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(98,98,98)\">.</span>join(<span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>name<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">=</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>value<span style=\"font-weight:bold;color:rgb(175,95,135)\">!r}</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    163</span>                        <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> name, value <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> deprecated<span style=\"color:rgb(98,98,98)\">.</span>items())\n<span class=\"ansi-green-fg ansi-bold\">    164</span>     warnings<span style=\"color:rgb(98,98,98)\">.</span>warn(<span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">The signature of </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>func<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\"> will be reduced</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    165</span>                   <span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\"> to </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>supported_number<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\"> positional args</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    166</span>                   <span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\"> </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span><span style=\"color:rgb(0,135,0)\">list</span>(supported)<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">: pass </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>wanted<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    167</span>                   <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\"> as keyword arg(s)</span><span style=\"color:rgb(175,0,0)\">'</span>,\n<span class=\"ansi-green-fg ansi-bold\">    168</span>                   stacklevel<span style=\"color:rgb(98,98,98)\">=</span>stacklevel,\n<span class=\"ansi-green-fg ansi-bold\">    169</span>                   category<span style=\"color:rgb(98,98,98)\">=</span>category)\n<span class=\"ansi-green-fg\">--&gt; 171</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> func(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/site-packages/graphviz/rendering.py:122</span>, in <span class=\"ansi-cyan-fg\">Render.render</span><span class=\"ansi-blue-fg\">(self, filename, directory, view, cleanup, format, renderer, formatter, neato_no_op, quiet, quiet_view, outfile, engine, raise_if_result_exists, overwrite_source)</span>\n<span class=\"ansi-green-fg ansi-bold\">    118</span> filepath <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>save(filename, directory<span style=\"color:rgb(98,98,98)\">=</span>directory, skip_existing<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>)\n<span class=\"ansi-green-fg ansi-bold\">    120</span> args<span style=\"color:rgb(98,98,98)\">.</span>append(filepath)\n<span class=\"ansi-green-fg\">--&gt; 122</span> rendered <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">self</span><span style=\"color:rgb(98,98,98)\">.</span>_render(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n<span class=\"ansi-green-fg ansi-bold\">    124</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> cleanup:\n<span class=\"ansi-green-fg ansi-bold\">    125</span>     log<span style=\"color:rgb(98,98,98)\">.</span>debug(<span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">delete </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">%r</span><span style=\"color:rgb(175,0,0)\">'</span>, filepath)\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/site-packages/graphviz/_tools.py:171</span>, in <span class=\"ansi-cyan-fg\">deprecate_positional_args.&lt;locals&gt;.decorator.&lt;locals&gt;.wrapper</span><span class=\"ansi-blue-fg\">(*args, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">    162</span>     wanted <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">, </span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(98,98,98)\">.</span>join(<span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>name<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">=</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>value<span style=\"font-weight:bold;color:rgb(175,95,135)\">!r}</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    163</span>                        <span style=\"font-weight:bold;color:rgb(0,135,0)\">for</span> name, value <span style=\"font-weight:bold;color:rgb(175,0,255)\">in</span> deprecated<span style=\"color:rgb(98,98,98)\">.</span>items())\n<span class=\"ansi-green-fg ansi-bold\">    164</span>     warnings<span style=\"color:rgb(98,98,98)\">.</span>warn(<span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">The signature of </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>func<span style=\"color:rgb(98,98,98)\">.</span><span style=\"color:rgb(0,0,135)\">__name__</span><span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\"> will be reduced</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    165</span>                   <span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\"> to </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>supported_number<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\"> positional args</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    166</span>                   <span style=\"color:rgb(175,0,0)\">f</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\"> </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span><span style=\"color:rgb(0,135,0)\">list</span>(supported)<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">: pass </span><span style=\"font-weight:bold;color:rgb(175,95,135)\">{</span>wanted<span style=\"font-weight:bold;color:rgb(175,95,135)\">}</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg ansi-bold\">    167</span>                   <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\"> as keyword arg(s)</span><span style=\"color:rgb(175,0,0)\">'</span>,\n<span class=\"ansi-green-fg ansi-bold\">    168</span>                   stacklevel<span style=\"color:rgb(98,98,98)\">=</span>stacklevel,\n<span class=\"ansi-green-fg ansi-bold\">    169</span>                   category<span style=\"color:rgb(98,98,98)\">=</span>category)\n<span class=\"ansi-green-fg\">--&gt; 171</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> func(<span style=\"color:rgb(98,98,98)\">*</span>args, <span style=\"color:rgb(98,98,98)\">*</span><span style=\"color:rgb(98,98,98)\">*</span>kwargs)\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/site-packages/graphviz/backend/rendering.py:326</span>, in <span class=\"ansi-cyan-fg\">render</span><span class=\"ansi-blue-fg\">(engine, format, filepath, renderer, formatter, neato_no_op, quiet, outfile, raise_if_result_exists, overwrite_filepath)</span>\n<span class=\"ansi-green-fg ansi-bold\">    322</span> cmd <span style=\"color:rgb(98,98,98)\">+</span><span style=\"color:rgb(98,98,98)\">=</span> args\n<span class=\"ansi-green-fg ansi-bold\">    324</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">assert</span> filepath <span style=\"font-weight:bold;color:rgb(175,0,255)\">is</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>, <span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">work around pytype false alarm</span><span style=\"color:rgb(175,0,0)\">'</span>\n<span class=\"ansi-green-fg\">--&gt; 326</span> execute<span style=\"color:rgb(98,98,98)\">.</span>run_check(cmd,\n<span class=\"ansi-green-fg ansi-bold\">    327</span>                   cwd<span style=\"color:rgb(98,98,98)\">=</span>filepath<span style=\"color:rgb(98,98,98)\">.</span>parent <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> filepath<span style=\"color:rgb(98,98,98)\">.</span>parent<span style=\"color:rgb(98,98,98)\">.</span>parts <span style=\"font-weight:bold;color:rgb(0,135,0)\">else</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">None</span>,\n<span class=\"ansi-green-fg ansi-bold\">    328</span>                   quiet<span style=\"color:rgb(98,98,98)\">=</span>quiet,\n<span class=\"ansi-green-fg ansi-bold\">    329</span>                   capture_output<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>)\n<span class=\"ansi-green-fg ansi-bold\">    331</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">return</span> os<span style=\"color:rgb(98,98,98)\">.</span>fspath(outfile)\n\nFile <span class=\"ansi-green-fg\">~/miniconda3/lib/python3.11/site-packages/graphviz/backend/execute.py:81</span>, in <span class=\"ansi-cyan-fg\">run_check</span><span class=\"ansi-blue-fg\">(cmd, input_lines, encoding, quiet, **kwargs)</span>\n<span class=\"ansi-green-fg ansi-bold\">     79</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">except</span> <span style=\"font-weight:bold;color:rgb(215,95,95)\">OSError</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> e:\n<span class=\"ansi-green-fg ansi-bold\">     80</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> e<span style=\"color:rgb(98,98,98)\">.</span>errno <span style=\"color:rgb(98,98,98)\">==</span> errno<span style=\"color:rgb(98,98,98)\">.</span>ENOENT:\n<span class=\"ansi-green-fg\">---&gt; 81</span>         <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span> ExecutableNotFound(cmd) <span style=\"font-weight:bold;color:rgb(0,135,0)\">from</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">e</span>\n<span class=\"ansi-green-fg ansi-bold\">     82</span>     <span style=\"font-weight:bold;color:rgb(0,135,0)\">raise</span>\n<span class=\"ansi-green-fg ansi-bold\">     84</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">if</span> <span style=\"font-weight:bold;color:rgb(175,0,255)\">not</span> quiet <span style=\"font-weight:bold;color:rgb(175,0,255)\">and</span> proc<span style=\"color:rgb(98,98,98)\">.</span>stderr:\n\n<span class=\"ansi-red-fg\">ExecutableNotFound</span>: failed to execute PosixPath('dot'), make sure the Graphviz executables are on your systems' PATH</pre>\n```\n:::\n\n:::\n:::\n\n\n![Central Olfactory Structures](/The Archive/Neuroscience/Neuroanatomy/Cranial Nerves/images/fig18.6 central olfactory structures blumenfeldNeuroanatomyClinicalCases2022.png)\n\n\n# Pathway:\n## First order neurons:\n1. Smell is detected by specialized chemoreceptors on bipolar primary sensory neurons found in the olfactory neuroepithelium @blumenfeldNeuroanatomyClinicalCases2022\n1. Olfactory nerve (made up of axons combined with other receptor cell axons) @blumenfeldNeuroanatomyClinicalCases2022\n1. Pass through Cribriform plate of Ethmoid bone @blumenfeldNeuroanatomyClinicalCases2022\n1. Terminate on the olfactory bulb (main relay station of olfactory pathway) @blumenfeldNeuroanatomyClinicalCases2022\n\n## Second order neurons:\n1. Olfactory tract\n1. Split: Medial & Lateral striae\n    1. Medial Stria: Projects to subcallosal gyrus\n    1. Lateral Stria: continues on to Parahippocampal gyrus\n\n# Relevant Structures\nThe olfactory nerve does not have peripheral ganglia\n\nOlfactory cortex: no single structure\n- Piriform cortex:\n    - Located: Below lateral olfactory stria\n    - Function: Olfactory processing\n- [Amygdala]({{< var ref-amygdala.path >}}):\n    - Located: Anterior to Temporal/Inferior horn of Lateral Ventricle\n    - Function: Emotion & Fear\n- Entorhinal cortex:\n    - Location: Anterior part of Parahippocampal gyrus\n    - Function: Formation of Memory\n\n# Pupillary light reflex\n\nCN2 is involved in the [pupillary light reflex]({{< var ref-pupillary-light-reflex.path >}})\n\n# Dysfunction\n- [Anosmia]({{< var ref-anosmia.path >}})\n\n",
    "supporting": [
      "CN1_Olfactory_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}